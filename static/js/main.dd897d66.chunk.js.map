{"version":3,"sources":["components/CardList/card-list.styles.jsx","pages/ScenicSpotPage/scenic-spot.styles.jsx","components/CardList/card-list.component.jsx","pages/ScenicSpotPage/city-list.js","pages/ScenicSpotPage/scenic-spot.page.jsx","routes.js","components/Header/header.styles.jsx","components/Header/header.component.jsx","components/Navbar/navbar.styles.jsx","components/Navbar/navbar-link.component.jsx","components/Navbar/navbar-sub-link.component.jsx","components/Navbar/navbar.component.jsx","App.js","serviceWorker.js","index.js"],"names":["CardList","styled","div","CardListLoading","CardArticle","article","CardInfo","CardTitle","h2","CardContent","CardCaption","CardImage","img","ScenicSpot","ScenicSpotMain","ScenicSpotTitle","ScenicSpotTitleContainer","ScenicSpotTitleText","h1","ScenicSpotContent","CardListItem","lazy","props","fallback","data","map","dataItem","index","key","cityList","ScenicSpotPage","handleScroll","e","state","scenicSpotList","rowCount","window","scrollY","screen","height","document","body","scrollHeight","length","setState","fetchData","addCount","city","match","params","fetch","then","response","json","scenicSpots","concat","console","log","this","addEventListener","prevProps","prevState","scenicSpot","id","ID","name","Name","description","Description","picture","Picture","filter","title","Component","routes","path","exact","component","label","redirects","from","to","links","type","children","Header","HeaderContainer","HeaderMainContainer","HeaderLogo","a","HeaderLogoImg","src","Navbar","NavbarLink","NavbarLinkItem","NavbarLinkItemContext","NavbarSubLink","NavbarSubLinkWrapper","NavbarSubLinkTitle","NavbarSubLinkMask","link","App","className","route","redirect","Boolean","location","hostname","ReactDOM","render","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dd897d66.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CardList = styled.div`\n  background: rgb(255, 255, 255);\n`;\n\nexport const CardListLoading = styled.div`\n  margin: 0px 60px;\n  position: relative;\n  padding: 20px 0px;\n`;\n\nexport const CardArticle = styled.article`\n  margin: 0px 60px;\n  border-bottom: 1px solid rgb(233, 233, 233);\n  position: relative;\n  padding: 20px 0px;\n  display: grid;\n  grid-template-areas:\n      \"header header\"\n      \". .\"\n      \"title thumb\"\n      \". thumb\"\n      \"main thumb\"\n      \". thumb\"\n      \"footer thumb\";\n  grid-template-columns: 1fr auto;\n  grid-template-rows: auto 12px auto 4px auto 16px auto;\n  -webkit-tap-highlight-color: transparent;\n`;\n\nexport const CardInfo = styled.div`\n  font-size: 14px;\n  grid-area: header / header / header / header;\n`\n\nexport const CardTitle = styled.h2`\n  grid-area: title / title / title / title;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`\n\nexport const CardContent = styled.div`\n  grid-area: main / main / main / main;\n  overflow: hidden;\n`\n\nexport const CardCaption = styled.div`\n  color: rgba(0, 0, 0, 0.35);\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  grid-area: footer / footer / footer / footer;\n  overflow: hidden;\n`\n\nexport const CardImage = styled.img`\n  grid-area: thumb / thumb / thumb / thumb;\n  overflow: hidden;\n  border-radius: 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  object-fit: cover;\n  margin-left: 20px;\n\n  width: 84px;\n  aspect-ratio: auto 84 / 84;\n  height: 84px;\n`","import styled from 'styled-components';\n\nexport const ScenicSpot = styled.div`\n  border-radius: 4px 4px 0px 0px;\n  background-color: rgb(255, 255, 255);\n  flex: 1 1 0%; \n`;\n\nexport const ScenicSpotMain = styled.div`\n  border-radius: 4px 4px 0px 0px;\n`;\n\nexport const ScenicSpotTitle = styled.div`\n  position: sticky;\n  top: 48px;\n  padding: 12px 60px 0px;\n  z-index: 10;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background: rgb(255, 255, 255);\n`;\n\nexport const ScenicSpotTitleContainer = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  padding: 0px;\n  width: 100%;\n  height: 80px;\n`;\n\nexport const ScenicSpotTitleText = styled.h1`\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  color: rgb(0, 0, 0);\n  font-size: 30px;\n  font-weight: 500;\n  margin-left: 10px;\n`;\n\nexport const ScenicSpotContent = styled.div`\n  flex: 1 1 0%;\n`;","import React, { Suspense, lazy } from 'react';\nimport { CardList, CardListLoading } from './card-list.styles'\n\nconst Loading = () => <CardListLoading>資料加載中...</CardListLoading>\nconst CardListItem = lazy(() => import('./card-list-item.component.jsx'))\n\nexport default (props) => {\n    return (\n        <CardList>\n            <div>\n                <Suspense fallback={Loading()}>\n                    {props.data ? props.data\n                        .map((dataItem, index) => (\n                            <CardListItem key={index} data={dataItem} />\n                        )) : \"沒有資料\"\n                    }\n                </Suspense>\n            </div>\n        </CardList>\n    )\n};","const cityList = [\n    {\n        \"name\": \"臺北市\",\n        \"id\": \"Taipei\"\n    },\n    {\n        \"name\": \"新北市\",\n        \"id\": \"NewTaipei\"\n    },\n    {\n        \"name\": \"桃園市\",\n        \"id\": \"Taoyuan\"\n    },\n    {\n        \"name\": \"臺中市\",\n        \"id\": \"Taichung\"\n    },\n    {\n        \"name\": \"臺南市\",\n        \"id\": \"Tainan\"\n    },\n    {\n        \"name\": \"高雄市\",\n        \"id\": \"Kaohsiung\"\n    },\n    {\n        \"name\": \"基隆市\",\n        \"id\": \"Keelung\"\n    },\n    {\n        \"name\": \"新竹市\",\n        \"id\": \"Hsinchu\"\n    },\n    {\n        \"name\": \"新竹縣\",\n        \"id\": \"HsinchuCounty\"\n    },\n    {\n        \"name\": \"苗栗縣\",\n        \"id\": \"MiaoliCounty\"\n    },\n    {\n        \"name\": \"彰化縣\",\n        \"id\": \"ChanghuaCounty\"\n    },\n    {\n        \"name\": \"南投縣\",\n        \"id\": \"NantouCounty\"\n    },\n    {\n        \"name\": \"雲林縣\",\n        \"id\": \"YunlinCounty\"\n    },\n    {\n        \"name\": \"嘉義縣\",\n        \"id\": \"ChiayiCounty\"\n    },\n    {\n        \"name\": \"嘉義市\",\n        \"id\": \"Chiayi\"\n    },\n    {\n        \"name\": \"屏東縣\",\n        \"id\": \"PingtungCounty\"\n    },\n    {\n        \"name\": \"宜蘭縣\",\n        \"id\": \"YilanCounty\"\n    },\n    {\n        \"name\": \"花蓮縣\",\n        \"id\": \"HualienCounty\"\n    },\n    {\n        \"name\": \"臺東縣\",\n        \"id\": \"TaitungCounty\"\n    },\n    {\n        \"name\": \"金門縣\",\n        \"id\": \"KinmenCounty\"\n    },\n    {\n        \"name\": \"澎湖縣\",\n        \"id\": \"PenghuCounty\"\n    },\n    {\n        \"name\": \"連江縣\",\n        \"id\": \"LienchiangCounty\"\n    }\n]\nexport default cityList","import React, { Component } from 'react';\nimport {\n    ScenicSpot,\n    ScenicSpotMain,\n    ScenicSpotTitle, ScenicSpotTitleContainer, ScenicSpotTitleText,\n    ScenicSpotContent\n} from './scenic-spot.styles';\nimport CardList from '../../components/CardList/card-list.component.jsx';\nimport cityList from './city-list';\n\n\nclass ScenicSpotPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            scenicSpotList: [],\n            rowCount: 30,\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props)\n        this.fetchData(this.state.rowCount)\n        window.addEventListener(\"scroll\", this.handleScroll)\n    }\n    \n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.rowCount !== prevState.rowCount) {\n            this.fetchData(30);\n        }\n    }\n\n    handleScroll = (e) => {\n        const { scenicSpotList, rowCount } = this.state\n        const isBottom = window.scrollY + window.screen.height >= document.body.scrollHeight\n        if (isBottom) {\n            if (scenicSpotList.length === rowCount) {\n                this.setState({\n                    rowCount: rowCount + 30\n                })\n            }\n        }\n    }\n\n    fetchData = (addCount) => {\n        let { city } = this.props.match.params\n        city = city && city !== 'city' ? city : ''\n        addCount = addCount || 0\n        fetch(`https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot/${city}?$top=${addCount}&$skip=${this.state.rowCount - addCount}`)\n            .then(response => response.json())\n            .then(scenicSpots => this.setState({\n                scenicSpotList:this.state.scenicSpotList.concat(scenicSpots)\n            }))\n    }\n\n    render() {\n        const { scenicSpotList } = this.state\n        const data = scenicSpotList.map(scenicSpot => {\n            return {\n                id: scenicSpot.ID,\n                name: scenicSpot.Name,\n                description: scenicSpot.Description,\n                picture: scenicSpot.Picture\n            }\n        })\n        const city = cityList.filter(city => city.id === this.props.match.params.city)\n        const title = `${city.length > 0 ? city[0].name : '全縣市' } 風景區`\n        return (\n            <ScenicSpot>\n                <ScenicSpotMain>\n                    <ScenicSpotTitle>\n                        <ScenicSpotTitleContainer>\n                            <ScenicSpotTitleText>{title}</ScenicSpotTitleText>\n                        </ScenicSpotTitleContainer>\n                    </ScenicSpotTitle>\n                    <ScenicSpotContent>\n                        <CardList data={data} />\n                    </ScenicSpotContent>\n                </ScenicSpotMain>\n            </ScenicSpot>\n        )\n    }\n}\n\nexport default ScenicSpotPage;","import ScenicSpot from 'pages/ScenicSpotPage/scenic-spot.page';\nimport cityList from 'pages/ScenicSpotPage/city-list';\n\nexport const routes = [\n    {\n        path: \"/scenicspot\",\n        exact: true,\n        component: ScenicSpot,\n        label: \"風景區\"\n    },\n    {\n        path: \"/scenicspot/:city\",\n        component: ScenicSpot,\n        label: \"城市列表\"\n    }\n];\n\nexport const redirects = [\n    {\n        from: \"\",\n        to: \"/scenicspot\"\n    }\n]\n\nconst cityListLinks = cityList.map(city => {\n    return {\n        type: 'link',\n        path: `/scenicspot/${city.id}`,\n        label: city.name\n    }\n})\n\nexport const links = [\n    {\n        type: 'link',\n        path: \"/scenicspot\",\n        label: \"風景區\"\n    },\n    {\n        type: 'title',\n        label: \"城市風景區\",\n        children: cityListLinks\n    }\n]","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  position: fixed;\n  top: 0px;\n  z-index: 11;\n  height: 48px;\n  width: 100%;\n  background: rgb(0, 106, 166);\n`;\n\nexport const HeaderContainer = styled.div`\n  max-width: 1280px;\n  height: 100%;\n  margin: auto;\n  padding: 0px 20px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const HeaderMainContainer = styled.div`\n  height: 100%;\n  flex: 1 1 0%;\n  display: flex;\n  align-items: center;\n  padding: 0px 16px;\n`;\n\nexport const HeaderLogo = styled.a`\n  height: 100%;\n  padding: 10px 0px;\n  display: block;\n\n  color: #3397cf;\n  text-decoration: none;\n\n  background-color: transparent;\n`;\n\nexport const HeaderLogoImg = styled.img`\n  display: block;\n  height: 100%;\n`;","import React from 'react';\nimport {\n    Header,\n    HeaderContainer,\n    HeaderMainContainer,\n    HeaderLogo, HeaderLogoImg\n} from './header.styles'\n\nexport default () => (\n    <Header>\n        <HeaderContainer>\n            <HeaderMainContainer>\n                <HeaderLogo>\n                    <HeaderLogoImg src='https://www.dcard.tw/_next/static/media/logo-2ef7b50901acaa284f36a0484329ec05.svg'/>\n                </HeaderLogo>\n            </HeaderMainContainer>\n        </HeaderContainer>\n    </Header>\n);","import styled from 'styled-components';\n\nexport const Navbar = styled.div`\n  position: sticky;\n  top: 68px;\n  height: calc(100vh - 88px);\n  min-width: 208px;\n  width: 208px;\n  margin: 20px 0px;\n  display: flex;\n  flex-direction: column;\n  user-select: none;\n  overflow: hidden;\n`;\n\nexport const NavbarLink = styled.a`\n  color: #3397cf;\n  text-decoration: none;\n  background-color: transparent;\n`;\n\nexport const NavbarLinkItem = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  height: 44px;\n  padding: 0px 10px 0px 20px;\n  color: rgba(255, 255, 255, 0.75);\n  cursor: pointer;\n`;\n\nexport const NavbarLinkItemContext = styled.div`\n  font-size: 16px;\n  margin: 0px 10px 0px 8px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nexport const NavbarSubLink = styled.div`\n  --track-radius: 3px;\n  --track-size: 8px;\n  overflow: auto;\n  width: 100%;\n  height: 100%;\n  margin-left: 30px;\n\n  position: relative;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-content: flex-start;\n  align-items: flex-start;\n  -moz-box-align: start;\n  -moz-box-orient: vertical;\n  -moz-box-direction: normal;\n  -moz-box-pack: start;\n`\n\nexport const NavbarSubLinkWrapper = styled.div`\n  overflow: hidden scroll;\n  width: inherit;\n  height: inherit;\n  max-width: inherit;\n  max-height: inherit;\n`\n\nexport const NavbarSubLinkTitle = styled.div`\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  height: 44px;\n  padding: 0px 10px 0px 20px;\n  color: rgba(255, 255, 255, 0.35);\n`;\n\nexport const NavbarSubLinkMask = styled.div`\n  position: relative;\n  padding: 0;\n  margin: 0;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n\n  direction: inherit;\n  overflow: hidden;\n  width: auto!important;\n  height: auto!important;\n  z-index: 0;\n`;\n\nexport const NavbarSubLinkItem = styled.div``\nexport const NavbarSubLinkItemContext = styled.div``","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { NavbarLink, NavbarLinkItem, NavbarLinkItemContext } from './navbar.styles';\n\nexport default (props) => (\n    <Link component={NavbarLink} to={props.to}>\n        <NavbarLinkItem>\n            <NavbarLinkItemContext>{props.label}</NavbarLinkItemContext>\n        </NavbarLinkItem>\n    </Link>\n);","import React from 'react';\nimport NavbarLink from './navbar-link.component';\n\nimport {\n    NavbarSubLink,\n    NavbarSubLinkWrapper,\n    NavbarSubLinkMask,\n    NavbarSubLinkTitle,\n} from './navbar.styles';\n\nexport default (props) => (\n    <NavbarSubLink>\n        <NavbarSubLinkWrapper>\n            <NavbarSubLinkMask>\n                <span>\n                    <NavbarSubLinkTitle>{props.title}</NavbarSubLinkTitle>\n                    {\n                        props.links.map((link, index) => (\n                            <NavbarLink\n                                key={index}\n                                to={link.path}\n                                label={link.label}\n                            />\n                        ))\n                    }\n                </span>\n            </NavbarSubLinkMask>\n        </NavbarSubLinkWrapper>\n    </NavbarSubLink >\n);","import React from 'react';\n\nimport NavbarLink from './navbar-link.component';\nimport NavbarSubLink from './navbar-sub-link.component';\n\nimport { Navbar } from './navbar.styles';\nimport { links } from 'routes';\n\nexport default () => (\n    <Navbar>\n        {\n            links\n                .map((link, index) => (\n                    link.type === 'link' ?\n                        <NavbarLink\n                            key={index}\n                            to={link.path}\n                            label={link.label}\n                        />\n                        : <NavbarSubLink key={index} title={link.label} links={link.children}/>\n                ))\n        }\n    </Navbar>\n);","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { routes, redirects } from 'routes';\nimport Header from 'components/Header/header.component';\nimport Navbar from 'components/Navbar/navbar.component';\n\nimport './App.css';\n\nconst App = () => (\n  <div>\n    <Header />\n    <div className='main'>\n      <div className='sidebar'>\n        <Navbar />\n      </div>\n      <div className='content'>\n        <div className=\"content-container paper\">\n          <div className='paper-container'>\n            <Switch>\n              {\n                routes\n                  .map((route, index) => (\n                    <Route key={index} exact={route.exact} path={route.path} component={route.component}/>\n                  ))\n              }\n              {\n                redirects\n                  .map((redirect, index) => (\n                    <Redirect key={index} from={redirect.from} to={redirect.to} />\n                  ))\n              }\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename={ process.env.PUBLIC_URL }>\n    <App />\n  </Router>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}